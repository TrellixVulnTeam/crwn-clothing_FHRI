{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst config = {\n  apiKey: \"AIzaSyBKz-NGHUCyRvvfOdGbfbTmk_yBxpZeKQU\",\n  authDomain: \"crwn-db-d5943.firebaseapp.com\",\n  projectId: \"crwn-db-d5943\",\n  storageBucket: \"crwn-db-d5943.appspot.com\",\n  messagingSenderId: \"4001601877\",\n  appId: \"1:4001601877:web:7c5f8bb3f2f3983696f7dc\",\n  measurementId: \"G-4XDWETXSHT\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firebase.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,2BAAP;AACA,OAAO,sBAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,+BAFD;AAGXC,EAAAA,SAAS,EAAE,eAHA;AAIXC,EAAAA,aAAa,EAAE,2BAJJ;AAKXC,EAAAA,iBAAiB,EAAE,YALR;AAMXC,EAAAA,KAAK,EAAE,yCANI;AAOXC,EAAAA,aAAa,EAAE;AAPJ,CAAf;AAUA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGZ,QAAQ,CAACa,GAAT,CAAc,SAAQH,QAAQ,CAACI,GAAI,EAAnC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBT,QAA7B;AACA,UAAMU,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAG;AACD,YAAMT,OAAO,CAACU,GAAR,CAAY;AACjBJ,QAAAA,WADiB;AAEjBC,QAAAA,KAFiB;AAGjBC,QAAAA,QAHiB;AAIjB,WAAGT;AAJc,OAAZ,CAAN;AAMD,KAPD,CAOC,OAAOY,KAAP,EAAa;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AAED;AACF;;AAED,SAAOd,OAAP;AACD,CAzBM;AA2BPZ,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AACA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAG7B,QAAQ,CAAC6B,SAAT,EAAlB;AACP,MAAMC,QAAQ,GAAG,IAAI9B,QAAQ,CAAC4B,IAAT,CAAcG,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAMN,IAAI,CAACO,eAAL,CAAqBL,QAArB,CAA/B;AACP,eAAe9B,QAAf","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBKz-NGHUCyRvvfOdGbfbTmk_yBxpZeKQU\",\n    authDomain: \"crwn-db-d5943.firebaseapp.com\",\n    projectId: \"crwn-db-d5943\",\n    storageBucket: \"crwn-db-d5943.appspot.com\",\n    messagingSenderId: \"4001601877\",\n    appId: \"1:4001601877:web:7c5f8bb3f2f3983696f7dc\",\n    measurementId: \"G-4XDWETXSHT\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n\n  const userRef = firebase.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n  \n  if(!snapShot.exists){\n    const {displayName, email} = userAuth;\n    const createAt = new Date();\n\n    try{\n      await userRef.set({\n       displayName,\n       email,\n       createAt,\n       ...additionalData \n      })\n    }catch (error){\n      console.log('error creating user', error.message);\n\n    }\n  }\n\n  return userRef;\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account'});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;  "]},"metadata":{},"sourceType":"module"}