{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nconst config = {\n  apiKey: \"AIzaSyBKz-NGHUCyRvvfOdGbfbTmk_yBxpZeKQU\",\n  authDomain: \"crwn-db-d5943.firebaseapp.com\",\n  projectId: \"crwn-db-d5943\",\n  storageBucket: \"crwn-db-d5943.appspot.com\",\n  messagingSenderId: \"4001601877\",\n  appId: \"1:4001601877:web:7c5f8bb3f2f3983696f7dc\",\n  measurementId: \"G-4XDWETXSHT\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(docSnapshot => {\n    const {\n      title,\n      items\n    } = docSnapshot.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: docSnapshot.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","docSnapshot","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","googleProvider","GoogleAuthProvider","provider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBKz-NGHUCyRvvfOdGbfbTmk_yBxpZeKQU\",\n    authDomain: \"crwn-db-d5943.firebaseapp.com\",\n    projectId: \"crwn-db-d5943\",\n    storageBucket: \"crwn-db-d5943.appspot.com\",\n    messagingSenderId: \"4001601877\",\n    appId: \"1:4001601877:web:7c5f8bb3f2f3983696f7dc\",\n    measurementId: \"G-4XDWETXSHT\"\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapShot = await userRef.get();\n  \n  if(!snapShot.exists){\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try{\n      await userRef.set({\n       displayName,\n       email,\n       createdAt,\n       ...additionalData \n      })\n    } catch (error){\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  \n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\n\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(docSnapshot => {\n    const { title, items } = docSnapshot.data();\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: docSnapshot.id,\n      title,items\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator; \n  }, {});\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\n\nexport const firestore = firebase.firestore();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;  "]},"metadata":{},"sourceType":"module"}