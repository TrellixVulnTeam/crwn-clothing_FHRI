{"ast":null,"code":"var _jsxFileName = \"/Users/studiomac-152/crwn-clothing/src/components/sign-in/sign-in.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport '../custom-button/custom-button.styles.scss';\nimport './sign-in.styles.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignIn = _ref => {\n  _s();\n\n  let {\n    emailSignInStart,\n    googleSignInStart\n  } = _ref;\n  //Destructure emailSignInStart\n  // constructor(props){\n  //     super(props);\n  //     this.state = {\n  //         email: '',\n  //         password:'' \n  //     }\n  // } \n  // Because we gonna convert class based to functional based for hooks\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  }); // In here we change the this.state to useState\n\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //stopping default event behaviour\n    //Why userCredentials cause we can't use this.state so we use userCredentials\n\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    }); //We have to add other component also so we spred the userCredentials\n  }; // render(){\n  //     const { googleSignInStart } = this.props;\n  //We remove render cause it is class based \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"I already have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        type: \"email\",\n        value: email,\n        handleChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        type: \"password\",\n        value: password,\n        handleChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n          type: \"button\",\n          onClick: googleSignInStart,\n          isGoogleSignIn: true,\n          children: \"Sign In With Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignIn, \"0FVwR9WoLxtgexZnwezzJtt5D6k=\");\n\n_c = SignIn;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport '../custom-button/custom-button.styles.scss';\nimport './sign-in.styles.scss';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n    //Destructure emailSignInStart\n    // constructor(props){\n    //     super(props);\n\n    //     this.state = {\n    //         email: '',\n    //         password:'' \n    //     }\n    // } \n    // Because we gonna convert class based to functional based for hooks\n    const [userCredentials, setCredentials] = useState({ email:'', password:'' })\n    // In here we change the this.state to useState\n\n    const { email, password } = userCredentials;\n    const handleSubmit = async event => {\n        event.preventDefault();  //stopping default event behaviour\n        \n        //Why userCredentials cause we can't use this.state so we use userCredentials\n\n        emailSignInStart(email, password);\n    };\n\n\n    const handleChange = event => {\n        const {value, name} = event.target\n        setCredentials({...userCredentials, [name]: value})\n        //We have to add other component also so we spred the userCredentials\n    };\n\n \n    // render(){\n    //     const { googleSignInStart } = this.props;\n    //We remove render cause it is class based \n        return(\n            <div className='sign-in'>\n                <h2>I already have an account</h2>\n                \n                <span>Sign in with your email and password</span>\n                <form onSubmit={handleSubmit}>\n                    <FormInput name=\"email\" type=\"email\" value={email} \n                    \n                    handleChange={handleChange}\n                    label=\"Email\"\n                    required/>\n                   \n                    <FormInput name=\"password\" type=\"password\" value={password} \n                    handleChange={handleChange}\n                    label=\"Password\"\n                    required/>\n                    <div className='buttons'>\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\n                        <CustomButton type='button'onClick={googleSignInStart}  isGoogleSignIn> \n                            Sign In With Google\n                        </CustomButton>\n                    </div>    \n                </form>\n            </div>\n        );\n    }\n \n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(\n        emailSignInStart({ email, password }))\n})\n\n\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}