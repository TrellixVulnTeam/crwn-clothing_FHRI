{"ast":null,"code":"var _jsxFileName = \"/Users/studiomac-152/crwn-clothing/src/components/cart-dropdown/cart-dropdown.componet.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport './cart-dropdown.styles.scss';\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CartDropdown = _ref => {\n  let {\n    cartItems,\n    history,\n    dispatch\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n        item: cartItem\n      }, cartItem.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"empty-message\",\n        children: \"Your cart is empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n      onClick: () => {\n        history.push('/checkout');\n        dispatchEvent(toggleCartHidden());\n      },\n      children: \"GO TO CHECKOUT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CartDropdown;\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/components/cart-dropdown/cart-dropdown.componet.jsx"],"names":["React","connect","createStructuredSelector","withRouter","selectCartItems","CustomButton","CartItem","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","dispatchEvent","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAO,6BAAP;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;;AAGA,MAAMC,YAAY,GAAG;AAAA,MAAC;AAACC,IAAAA,SAAD;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA;AAArB,GAAD;AAAA,sBACjB;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKF,SAAS,CAACG,MAAV,GACGH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAClB,QAAC,QAAD;AAA4B,QAAA,IAAI,EAAEA;AAAlC,SAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cADJ,CADH,gBAIO;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALZ;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE,MACnB;AACIL,QAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAC,QAAAA,aAAa,CAACV,gBAAgB,EAAjB,CAAb;AACH,OAJL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADiB;AAAA,CAArB;;KAAMC,Y;AAoBN,MAAMU,eAAe,GAAGhB,wBAAwB,CAAE;AAC7CO,EAAAA,SAAS,EAAEL;AADkC,CAAF,CAAhD;AAGA,eAAeD,UAAU,CAACF,OAAO,CAACiB,eAAD,CAAP,CAAyBV,YAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\"; \nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { withRouter } from \"react-router-dom\";\nimport { selectCartItems } from \"../../redux/cart/cart.selectors\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport CartItem from \"../cart-item/cart-item.component\";\nimport './cart-dropdown.styles.scss';\nimport { toggleCartHidden } from \"../../redux/cart/cart.actions\";\n\n\nconst CartDropdown = ({cartItems, history, dispatch}) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items' >\n            {cartItems.length ? (\n                cartItems.map(cartItem => (\n                    <CartItem key={cartItem.id} item={cartItem}/>))\n            ) : (\n                    <span className='empty-message'>Your cart is empty</span>\n            )}\n            </div> \n        \n        <CustomButton onClick={() => \n            {\n                history.push('/checkout');\n                dispatchEvent(toggleCartHidden());\n            }}>GO TO CHECKOUT</CustomButton>\n    </div>\n)\n\n\nconst mapStateToProps = createStructuredSelector ({\n     cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropdown));"]},"metadata":{},"sourceType":"module"}