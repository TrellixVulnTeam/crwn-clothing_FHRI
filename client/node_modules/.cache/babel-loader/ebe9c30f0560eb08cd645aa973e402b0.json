{"ast":null,"code":"import { call, takeLatest, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am Lewis Hamilton');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["call","takeLatest","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,IAAR,EAAcC,UAAd,EAA0BC,GAA1B,QAAoC,oBAApC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AACA,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAN;;AAEA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACI,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMd,GAAG,CAACK,uBAAuB,CAACS,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMjB,UAAU,CACZI,eAAe,CAACc,uBADJ,EAEZX,qBAFY,CAAhB;AAIH","sourcesContent":["import {call, takeLatest, put} from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync(){\n    yield console.log('I am Lewis Hamilton');\n\n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap));\n    }catch(error){\n        yield put(fetchCollectionsFailure(error.message))\n    }\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}