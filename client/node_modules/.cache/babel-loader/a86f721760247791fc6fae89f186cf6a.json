{"ast":null,"code":"import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state,\n        hidden: !state.hidden\n      };\n\n    case CartActionTypes.ADD_ITEM:\n      return { ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.REMOVE_ITEM:\n      return { ...state,\n        cartItem: removeItemFromCart(state.cartItems, action.payload)\n      };\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","cartItem","CLEAR_ITEM_FROM_CART","filter","id"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAiD,cAAjD;AAGA,MAAMC,aAAa,GAAE;AACjBC,EAAAA,MAAM,EAAE,IADS;AACHC,EAAAA,SAAS,EAAC;AADP,CAArB;;AAIA,MAAMC,WAAW,GAAG,YAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,eAAe,CAACU,kBAArB;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFZ,OAAP;;AAIA,SAAKJ,eAAe,CAACW,QAArB;AACI,aAAM,EACF,GAAGJ,KADD;AAEFF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFtB,OAAN;;AAIA,SAAKZ,eAAe,CAACa,WAArB;AACI,aAAM,EACF,GAAGN,KADD;AAEFO,QAAAA,QAAQ,EAAEZ,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B,OAAN;;AAIR,SAAKZ,eAAe,CAACe,oBAArB;AACI,aAAM,EACF,GAAGR,KADD;AAEFF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBW,MAAhB,CAAuBF,QAAQ,IAAIA,QAAQ,CAACG,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAAlE;AAFT,OAAN;;AAIA;AACC,aAAOV,KAAP;AAtBb;AAwBH,CAzBD;;AA2BA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from \"./cart.types\";\nimport { addItemToCart, removeItemFromCart} from \"./cart.utils\";\n\n\nconst INITIAL_STATE ={\n    hidden: true, cartItems:[]\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch(action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\n            return {\n                ...state,\n                hidden: !state.hidden\n            };\n            case CartActionTypes.ADD_ITEM:\n                return{\n                    ...state,\n                    cartItems: addItemToCart(state.cartItems, action.payload)\n                };\n                case CartActionTypes.REMOVE_ITEM:\n                    return{\n                        ...state,\n                        cartItem: removeItemFromCart(state.cartItems, action.payload)\n                    };\n            case CartActionTypes.CLEAR_ITEM_FROM_CART:\n                return{\n                    ...state,\n                    cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n                    }; \n                default:\n                 return state;\n    }\n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}