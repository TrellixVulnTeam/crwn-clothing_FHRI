{"ast":null,"code":"//Connect redux-think with redux project\nimport { createStore, applyMiddleware } from 'redux'; //(1)import middleware\n\nimport logger from 'redux-logger';\nimport { persistStore } from 'redux-persist'; //(2) We remove thunk cause we don't use anymore\n\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootsaga from './root-saga'; //we remove fetchCollectionStart cause we import it in root-saga.js\n\nconst sagaMiddleware = createSagaMiddleware(); //global variable\n\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //(3)use applyMiddleware in create store function\n//(4)pass thunk in applyMiddleware function\n\nsagaMiddleware.run(rootsaga);\nexport default {\n  store,\n  persistStore\n};\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/Users/studiomac-152/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","persistStore","rootReducer","createSagaMiddleware","rootsaga","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA;AACA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,QAA2B,eAA3B,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB,C,CACA;;AAGA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C,C,CACA;;AACA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA2C;AACvCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBV,MAAjB;AACH;;AACD,OAAO,MAAMW,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB,C,CACP;AACA;;AAEAD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,eAAe;AAAEO,EAAAA,KAAF;AAASV,EAAAA;AAAT,CAAf;AACA,OAAO,MAAMY,SAAS,GAAGZ,YAAY,CAACU,KAAD,CAA9B","sourcesContent":["//Connect redux-think with redux project\nimport {createStore, applyMiddleware} from 'redux'; \n//(1)import middleware\nimport logger from 'redux-logger';\nimport {persistStore} from 'redux-persist';\n//(2) We remove thunk cause we don't use anymore\nimport rootReducer from './root-reducer';\nimport createSagaMiddleware from '@redux-saga/core';\nimport rootsaga from './root-saga'; \n//we remove fetchCollectionStart cause we import it in root-saga.js\n\n\nconst sagaMiddleware = createSagaMiddleware();\n//global variable\nconst middlewares = [sagaMiddleware]; \nif (process.env.NODE_ENV === 'development'){\n    middlewares.push(logger);\n}\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n//(3)use applyMiddleware in create store function\n//(4)pass thunk in applyMiddleware function\n\nsagaMiddleware.run(rootsaga);\n\nexport default { store, persistStore }; \nexport const persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}